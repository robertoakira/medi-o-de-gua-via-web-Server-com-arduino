#include <SPI.h>
#include <Ethernet.h>

// MAC address from Ethernet shield sticker under board
byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };
IPAddress ip(192, 168, 0, 82); // IP address, may need to change depending on network
EthernetServer server(80); // create a server at port 80
#define CHAVE 2
int inicio, pulsos; 
boolean pulso; 
String HTTP_req; // stores the HTTP request

void setup()
{
pulso=HIGH; 
pinMode(CHAVE,INPUT);
// Open serial communications and wait for port to open:
pulsos=0;
Serial.begin(9600);
while (!Serial) {
; // wait for serial port to connect. Needed for Leonardo only
}

Ethernet.begin(mac, ip); // initialize Ethernet device
server.begin(); // start to listen for clients
// for diagnostics
pinMode(3, INPUT); // switch is attached to Arduino pin 3
Serial.print("server is at ");
Serial.println(Ethernet.localIP());
Serial.println("\nEntre Volume:"); 
while(pulsos==0) { 
if (Serial.available() > 0) 
{ 
pulsos= Serial.parseInt(); 
} 
} 
Serial.println(pulsos); 
delay(1000);

}


void loop()
{
if (digitalRead (2) == HIGH)
{
if(pulso == HIGH)
{
pulsos++; 
}
pulso = LOW; 
}
else{
pulso= HIGH; 
}
EthernetClient client = server.available(); // try to get client

if (client) { // got client?
boolean currentLineIsBlank = true;
while (client.connected()) {
if (client.available()) { // client data available to read
char c = client.read(); // read 1 byte (character) from client
HTTP_req += c; // save the HTTP request 1 char at a time
// last line of client request is blank and ends with \n
// respond to client only after last line received
if (c == '\n' && currentLineIsBlank) {
// send a standard http response header
client.println("HTTP/1.1 200 OK");
client.println("Content-Type: text/html");
client.println("Connection: keep-alive");
client.println();
// AJAX request for switch state
if (HTTP_req.indexOf("ajax_switch") > -1) {
// read switch state and send appropriate paragraph text
GetSwitchState(client);
}
else { // HTTP request for web page
// send web page - contains JavaScript with AJAX calls
client.println("<!DOCTYPE html>");
client.println("<html>");
client.println("<head>");
client.println("<title>pagina de medicao</title>");
client.println("<script>");
client.println("function GetSwitchState() {");
client.println("nocache = \"&nocache=\"\
+ Math.random() * 1000000;");
client.println("var request = new XMLHttpRequest();");
client.println("request.onreadystatechange = function() {");
client.println("if (this.readyState == 4) {");
client.println("if (this.status == 200) {");
client.println("if (this.responseText != null) {");
client.println("document.getElementById(\"switch_txt\")\
.innerHTML = this.responseText;");
client.println("}}}}");
client.println(
"request.open(\"GET\", \"ajax_switch\" + nocache, true);");
//client.println("request.open(\"GET\", \"ajax_switch\", true);");
client.println("request.send(null);");
client.println("}");
client.println("</script>");
client.println("</head>");
client.println("<body>");
client.println("<h1>sistema de medicao</h1>");
client.println(
"<p id=\"switch_txt\">Switch state: Not requested...</p>");
client.println("<button type=\"button\"\
onclick=\"GetSwitchState()\">botao de medicao</button>");
client.println("</body>");
client.println("</html>");
}
// display received HTTP request on serial port
Serial.print(HTTP_req);
HTTP_req = ""; // finished with request, empty string
break;
}
// every line of text received from the client ends with \r\n
if (c == '\n') {
// last character on line of received text
// starting new line with next character read
currentLineIsBlank = true;
} 
else if (c != '\r') {
// a text character was received from client
currentLineIsBlank = false;
}
} // end if (client.available())
} // end while (client.connected())
delay(1); // give the web browser time to receive the data
client.stop(); // close the connection
} // end if (client)
}

// send the state of the switch to the web browser
void GetSwitchState(EthernetClient cl)
{
if (digitalRead(3)) {
cl.println("chave habilitada: ON");

cl.println("volume medido: ");
cl.println(pulsos);
cl.println(" litros ");
cl.println("<br />");

}
else {
cl.println("chave deshabilitada: OFF");
}
}
